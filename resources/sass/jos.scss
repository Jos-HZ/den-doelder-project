/* .containerQaz {
    width: max-content;
    background: green;
    height: max-content;
    margin: 5vh;
}
.exclusiveButton {
    box-sizing: border-box;
    padding: 12px;
    margin: 1vh;
    display: inline-block;
    background-color: red;
} */

div.segmented-toggle-switch {
    cursor: pointer;
    display: inline-block;
    position: relative;
    font: 20px/1.5 sans-serif;
    background: url(http://i.stack.imgur.com/XVCAQ.png);
    color: #fff;
    border: 4px solid transparent;
    border-radius: 50px;
    user-select: none;
    -webkit-user-select: none;
    -webkit-touch-callout: none;
}

div.options {
    border-radius: 50px;
    top: 0;
    left: 0;
    position: relative;
    /* font-size: 0; */
    overflow: hidden;
}

div.options > option {
    position: relative;
    text-align: left;
    /* font-size: 20px; */
    display: inline-block;
    padding: 3px 35px;
}

/* the jQ clone */
div.options + div.options {
    position: absolute;
    background: #fff;
    width: 50%;
    height: 100%;
    white-space: nowrap;
}

div.options + div.options > option {
    position: relative;
    color: #006cff;
}

:root {
    --card-color: rgb(255, 255, 255);
    --background-color: #f8f9fc;
    --shadow: 0px 0px 10px 0px #dddddd;
}

html, body {
    /* overflow-y: scroll; */
    scrollbar-width: none;
    background-color: var(--background-color) !important;
}

body::-webkit-scrollbar {
    width: 0;
    height: 0;
    display: none;
}


container.tabs {
    display: block;
    position: sticky;
    top: 2vh;
    background-color: #7a7a7a;
    box-shadow: var(--shadow);
    color: white;
    margin: 0 !important;
    border-radius: 100vw;
    margin: 2vh 10vw 0 10vw !important;

    display: flex;
    justify-content: space-evenly;
    align-content: stretch;
    align-items: flex-start;

}

tab.tab {
    display: inline-block;
    flex: 1 0 auto;
    text-align: center;
    padding: 2vh;
}

card.order {
    /* flex: 0 1 100vw; */
    background-color: var(--card-color);
    box-shadow: var(--shadow);
    border-radius: 20px;
    padding: 2vh;
    width: 80vw;
    /* margin: 5vh; */
}

a > card.order {
    display: block;
    border-radius: 20px;
    padding: 2vh;
    /* margin: 2vh 10vw; */
}

container.list {
    /* background-color: var(--background-color); */
}

container.horizontal.flexContainer {
    margin-top: 2vh;
    width: 100%;
    overflow-x: scroll;
    overflow-y: visible;
    scroll-snap-type: x mandatory;
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    align-items: flex-start;
}
container.vertical.flexContainer {
    margin: 0vh 10vw;
    /* flex: 1 0 100vh; */
    background-color: var(--background-color);
    /* background-color: green; */
    row-gap: 5vh;
    scroll-snap-align: center;
    scroll-snap-stop: always;
    width: 100vw;
    box-sizing: border-box;
    display: inline-flex;
    flex-direction: column;
    flex-wrap: nowrap;
    align-items: flex-start;
}

/* card.card {
    box-sizing: border-box;
    width: 100vw;
} */

.notesTitle > div {
    width: 2rem;
}

.notesTitle p {
    display: inline-block;
}

.notesTitle a {
    margin-left: auto;
    margin-right: 0;
}

/* .notesTitle > a > input {
    width: 2rem;
} */

.notesTitle {
    width: 100%;
    display: inline-flex;
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: space-between;
    align-items: flex-start;
}

.grow-wrap {
    /* easy way to plop the elements on top of each other and have them both sized based on the tallest one's height */
    display: grid;
}

.grow-wrap::after {
    /* Note the weird space! Needed to preventy jumpy behavior */
    content: attr(data-replicated-value) " ";

    /* This is how textarea text behaves */
    white-space: pre-wrap;

    /* Hidden from view, clicks, and screen readers */
    visibility: hidden;
}

.grow-wrap > textarea {
    /* You could leave this, but after a user resizes, then it ruins the auto sizing */
    resize: none;

    /* Firefox shows scrollbar on growth, you can hide like this. */
    overflow: hidden;
}

.grow-wrap > textarea,
.grow-wrap::after {
    overflow-wrap: break-word;
    overflow-x: clip;
    /* Identical styling required!! */
    border: 2px solid rgb(255, 255, 255);
    border-radius: 1em;
    padding: 0.5rem;
    font: inherit;

    /* Place on top of each other */
    grid-area: 1 / 1 / 2 / 2;
}
