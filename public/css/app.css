.notesTitle > div {
    width: 2rem;
}

.notesTitle p {
    display: inline-block;
}

.notesTitle a {
    margin-left: auto;
    margin-right: 0;
}

/* .notesTitle > a > input {
    width: 2rem;
} */

.notesTitle {
    width: 100%;
    display: inline-flex;
    flex-direction: row;
    flex-wrap: nowrap;
    /* align-items: stretch; */
    /* align-content: stretch; */
    /* justify-content: stretch; */
    /* align-items: space-evenly; */
    /* align-content: space-evenly; */
    justify-content: space-between;
    /* align-items: center; */
    /* align-content: center; */
    /* justify-content: center; */
    align-items: flex-start;
    /* align-content: flex-start; */
    /* justify-content: flex-start; */
    /* align-items: baseline; */
    /* align-content: baseline; */
    /* justify-content: baseline; */
}

.grow-wrap {
    /* easy way to plop the elements on top of each other and have them both sized based on the tallest one's height */
    display: grid;
}

.grow-wrap::after {
    /* Note the weird space! Needed to preventy jumpy behavior */
    content: attr(data-replicated-value) " ";

    /* This is how textarea text behaves */
    white-space: pre-wrap;

    /* Hidden from view, clicks, and screen readers */
    visibility: hidden;
}

.grow-wrap > textarea {
    /* You could leave this, but after a user resizes, then it ruins the auto sizing */
    resize: none;

    /* Firefox shows scrollbar on growth, you can hide like this. */
    overflow: hidden;
}

.grow-wrap > textarea,
.grow-wrap::after {
    overflow-wrap: break-word;
    overflow-x: clip;
    /* Identical styling required!! */
    border: 2px solid rgb(255, 255, 255);
    border-radius: 1em;
    padding: 0.5rem;
    font: inherit;

    /* Place on top of each other */
    grid-area: 1 / 1 / 2 / 2;
}
